#include<bits/stdc++.h>
using namespace std;
#define block 555
struct query{
	int l,r,index;
};

int ar[30001];
int *fr = new int[1000001]();
query queries[200001];
int ans[200001];
int cnt = 0;
bool compare(query a,query b){
	if(a.l/block!=b.l/block){
		return a.l/block<b.l/block;
	}else{
		a.r<b.r;
	}
}
void add(int num){
	fr[ar[num]]++;
	if(fr[ar[num]]==1){
		cnt++;
	}
}
void remove(int num){
	fr[ar[num]]--;
	if(fr[ar[num]]==0){
		cnt--;
	}
}
int main(){
	int n;
	cin>>n;
	for(int i =0;i<n;i++){
		cin>>ar[i];
	}
	int q;
	cin>>q;
	for(int i=0;i<q;i++){
		int left,right;
		cin>>left>>right;
		queries[i].index = i;
		queries[i].l = left-1;
		queries[i].r = right-1;
	}
	sort(queries,queries+q,compare);
	
	int ml = 0,mr = -1;
	for(int i=0;i<q;i++){
		//Extending the strip
		while(ml>queries[i].l){
			ml--;
			add(ml);
		}
		while(mr<queries[i].r){
			mr++;
			add(mr);
		}
		//Contracting the strip
		while(ml<queries[i].l){
			remove(ml);
			ml++;
		}
		while(mr>queries[i].r){
			remove(mr);
			mr--;
		}
		ans[queries[i].index] = cnt;
	}
	for(int i=0;i<q;i++){
		cout<<ans[i]<<endl;
	}	
	
	return 0;
}
